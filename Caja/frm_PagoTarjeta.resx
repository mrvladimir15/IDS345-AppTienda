<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>